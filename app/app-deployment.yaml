apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: app
        image: myapp:latest  
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: MODE
          value: "development"
        - name: MYSQL_DATABASE
          value: "mydb_tugas5"
        - name: MYSQL_PASSWORD
          value: "mydb6789tyui"
        - name: MYSQL_ROOT_PASSWORD
          value: "mydb6789tyui"
        volumeMounts:
        - name: app-src
          mountPath: "/var/www/localhost/htdocs"
      - name: app1
        image: myapp1:latest  
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: MODE
          value: "development"
        - name: MYSQL_DATABASE
          value: "mydb_tugas5"
        - name: MYSQL_PASSWORD
          value: "mydb6789tyui"
        - name: MYSQL_ROOT_PASSWORD
          value: "mydb6789tyui"
        volumeMounts:
        - name: app-src1
          mountPath: "/var/www/localhost/htdocs"
      volumes:
      - name: app-src
        hostPath:
          path: /KA-Tugas-5-2024/app/src
          type: Directory
      - name: app-src1
        hostPath:
          path: /KA-Tugas-5-2024/app/src1
          type: Directory

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  selector:
    app: app 
  ports:
    - name: app
      protocol: TCP
      port: 5555
      targetPort: 80  
    - name: app1
      protocol: TCP
      port: 5
      targetPort: 8080
  type: NodePort
